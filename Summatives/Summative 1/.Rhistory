margin_of_error = sum$coefficients[3,2]
t_crit <- qt(1 - 0.05/2, 440-5)
min = mean_value - t_crit*margin_of_error
max = mean_value + t_crit*margin_of_error
min
max
resid_capt = resid(lm_participants)
trial_results$resid= resid_capt
ggplot(data = trial_results, aes(x=baseline, y=resid, col=arm)) +
geom_point() +
geom_hline(yintercept=0)+
xlab("Baseline")+
ylab("Residual")+theme_bw()
lm_part_int = lm(outcome ~ arm + baseline + baseline:arm, data = trial_results)
tbl_regression(lm_part_int)
# look at the arm:baseline row for p-value significance: 0.97
# Therefore we can be confident that there is no need to fit unequal slopes for this dataset. This fits with our
# earlier conclusion (from inspecting the residuals) that just including first order terms is fine.
trial_results = trial_results[,-8] # remove "resid"
colnames(trial_results)
lm_multiple = lm(outcome ~ baseline + arm + sex + age + BMI, data = trial_results)
summary(lm_multiple)
tbl_regression(lm_multiple)
vif(lm_multiple)
lm_sex_BMI = lm(outcome ~ baseline + arm*sex + arm*BMI, data = trial_results)
summary(lm_sex_BMI)
tbl_regression(lm_sex_BMI)
vif(lm_sex_BMI)
# Fit ANCOVA model with interactions
ancova_model <- lm(outcome ~ arm * baseline + arm * age + arm * BMI + arm * sex, data = trial_results)
# Display results
tbl_regression(ancova_model)
vif(ancova_model)
install.packages(c("naniar", "smdi", "tidyverse", "visdat", "rstanarm", "medicaldata", "ggplot2", "gridExtra", "knitr", "parallel", "dplyr", "Minirand", "car", "gtsummary"))
hist(participants_df$baseline)
baseline <- participants_df$baseline
qqnorm(baseline, main = "Q-Q Plot of Baseline Variable", pch = 16, col = "blue")
qqline(baseline, col = "red", lwd = 2)  # Add reference line
age <- participants_df$age
qqnorm(age, main = "Q-Q Plot of Age Variable", pch = 16, col = "blue")
qqline(age, col = "red", lwd = 2)  # Add reference line
BMI <- participants_df$BMI
qqnorm(BMI, main = "Q-Q Plot of Baseline Variable", pch = 16, col = "blue")
qqline(BMI, col = "red", lwd = 2)  # Add reference line
library(car)
# Divide age into quartiles or categories
age_group <- cut(age, breaks = quantile(age, probs = seq(0, 1, 0.25), na.rm = TRUE), include.lowest = TRUE)
# Perform Levene’s test
leveneTest(Y ~ age_group, data = dataset)
library(car)
# Divide age into quartiles or categories
age_group <- cut(age, breaks = quantile(age, probs = seq(0, 1, 0.25), na.rm = TRUE), include.lowest = TRUE)
# Perform Levene’s test
leveneTest(Y ~ age_group, data = participants_df)
# Print structure to verify changes
str(df_category)
# View tables to check counts
table(df_category$age_range)
table(df_category$bmi_category)
table(df_category$sex_category)
## You can now investigate the balance of the design as usual
table(df_category$treat)
lm_participants = lm(outcome ~ baseline + arm, data = trial_results)
sum <- summary(lm_participants)
vif(lm_participants)
sum
ggplot(data = participants_baseline_imp, aes(x=baseline_imp, y=baseline_imp_rand, col = sex)) +
geom_point() +
xlab("Baseline") +
ylab("Baseline") +
ggtitle("Sex vs. Baseline") +
theme_bw()
ggplot(data = participants_baseline_imp, aes(x=baseline_imp, y=baseline_imp_rand, col = age)) +
geom_point() +
xlab("Baseline") +
ylab("Baseline") +
ggtitle("Age vs. Baseline") +
theme_bw()
ggplot(data = participants_baseline_imp, aes(x=baseline_imp, y=baseline_imp_rand, col = BMI)) +
geom_point() +
xlab("Baseline") +
ylab("Baseline") +
ggtitle("BMI vs. Baseline") +
theme_bw()
ggplot(data = participants_baseline_imp, aes(x=age, y=baseline, col = sex)) +
geom_point() +
xlab("Age") +
ylab("Baseline") +
ggtitle("Age vs. Baseline") +
theme_bw()
ggplot(data = participants_baseline_imp, aes(x=baseline_imp, y=baseline_imp_rand, col = sex)) +
geom_point() +
xlab("Baseline") +
ylab("Baseline") +
ggtitle("Sex vs. Baseline") +
theme_bw()
ggplot(data = participants_baseline_imp, aes(x=baseline_imp, y=baseline_imp_rand, col = age)) +
geom_point() +
xlab("Baseline") +
ylab("Baseline") +
ggtitle("Age vs. Baseline") +
theme_bw()
ggplot(data = participants_baseline_imp, aes(x=baseline_imp, y=baseline_imp_rand, col = BMI)) +
geom_point() +
xlab("Baseline") +
ylab("Baseline") +
ggtitle("BMI vs. Baseline") +
theme_bw()
ggplot(data = participants_df, aes(x=baseline, y=baseline, col = sex)) +
geom_point() +
xlab("Baseline") +
ylab("Baseline") +
ggtitle("Sex vs. Baseline") +
theme_bw()
colnames(participants_baseline_imp)
ggplot(data = participants_baseline_imp, aes(x=baseline, y=baseline, col = age)) +
geom_point() +
xlab("Baseline") +
ylab("Baseline") +
ggtitle("Age vs. Baseline") +
theme_bw()
ggplot(data = participants_baseline_imp, aes(x=baseline_imp, y=baseline_imp_rand, col = age)) +
geom_point() +
xlab("Baseline") +
ylab("Baseline") +
ggtitle("Age vs. Baseline") +
theme_bw()
ggplot(data = participants_df, aes(x=baseline, y=baseline, col = sex)) +
geom_point() +
xlab("Baseline") +
ylab("Baseline") +
ggtitle("Sex vs. Baseline") +
theme_bw()
ggplot(df_category, aes(x = sex, y = baseline, fill = sex)) +
geom_boxplot() +
labs(title = "Baseline Symptom Distribution by Sex", x = "Sex", y = "Baseline Value") +
theme_minimal()
ggplot(df_category, aes(x = sex, y = baseline, fill = sex)) +
geom_boxplot() +
labs(title = "Baseline Symptom Distribution by Sex", x = "Sex", y = "Baseline Value") +
theme_minimal()
participant_data <- read_csv("participant_data.csv")
View(participant_data)
str(participant_data)
# vector of names of columns to be coerced to factor
cols <- c("sex")
# convert each of those columns to factors
participant_data[cols] <- lapply(participant_data[cols], factor)
# Check the result:
str(participant_data)
View(participant_data)
# INVESTIGATING  MISSINGNESS ---------------------------------------------------
vis_dat(participant_data, sort_type=F)
gg_miss_var(participant_data)
attach(participant_data)
sum(is.na(participant_data))
nabular(participant_data)
part_nab1 = nabular(participant_data)
part_nab2 = nabular(participant_data)
part_nab3 = nabular(participant_data)
part_nab1 %>%
group_by(baseline_NA) %>%
summarise_at(.vars = "age",
.funs = c("mean", "sd", "var", "min", "max"),
na.rm = TRUE)
part_nab2 %>%
group_by(baseline_NA) %>%
summarise_at(.vars = "BMI",
.funs = c("mean", "sd", "var", "min", "max"),
na.rm = TRUE)
part_nab3 %>%
group_by(baseline_NA, sex) %>%
summarise(count = n(), .groups = "drop")
ggplot(part_nab1,
aes(x = age,
fill = baseline_NA)) +
geom_histogram()
ggplot(part_nab2,
aes(x = BMI,
fill = baseline_NA)) +
geom_histogram()
ggplot(part_nab3,
aes(x = sex,
fill = baseline_NA)) +
geom_bar()
gg_miss_var(participant_data)
ggplot(results, aes(x = baseline, y = outcome, color = arm)) +
geom_point(alpha = 0.6) +  # Scatter plot with transparency
geom_smooth(method = "lm", se = FALSE) +  # Linear regression lines without confidence bands
labs(title = "Baseline vs Outcome by Arm",
x = "Baseline",
y = "Outcome",
color = "Arm") +
theme_minimal()
results = read_csv("trial_results.csv")
results = read.csv("C:\\Users\\raulu\\OneDrive\\Documents\\4th Year\\CTs\\Summatives\\Summative 1\\Trial Results.csv",
stringsAsFactors = FALSE)
View(results)
summary(results[results$arm=="A",])
tapply(results$outcome, results$arm, summary)
ggplot(results, aes(x = baseline, y = outcome, color = arm)) +
geom_point(alpha = 0.6) +  # Scatter plot with transparency
geom_smooth(method = "lm", se = FALSE) +  # Linear regression lines without confidence bands
labs(title = "Baseline vs Outcome by Arm",
x = "Baseline",
y = "Outcome",
color = "Arm") +
theme_minimal()
# summary statistics for each group
MeanA = mean(results[results$arm=="A",]$baseline, na.rm = TRUE)
MeanB = mean(results[results$arm=="B",]$baseline, na.rm = TRUE)
sdA = sd(results[results$arm=="A",]$baseline, na.rm = TRUE)
sdB = sd(results[results$arm=="B",]$baseline, na.rm = TRUE)
t.test(
x=results$baseline[results$arm == "A"],
y=results$baseline[results$arm == "B"],
alternative = "two.sided",
var.equal=T, # this makes the method use pooled variances, as we did in lectures
conf.level = 0.95 # note that this is 1-alpha
)
ggplot(data=results, aes(x=outcome)) + geom_histogram()
ggplot(data=results, aes(x=baseline)) + geom_histogram()
ggplot(data=results, aes(x=BMI)) + geom_histogram()
ggplot(data=results, aes(x=age)) + geom_histogram()
ggplot(data=results, aes(x=log10(age))) + geom_histogram()
ggplot(data = participants_df, aes(x=baseline, y=baseline, col = sex)) +
geom_point() +
xlab("Baseline") +
ylab("Baseline") +
ggtitle("Sex vs. Baseline") +
theme_bw()
ggplot(data = participants_df, aes(x=age, y=baseline, col = sex)) +
geom_point() +
xlab("Baseline") +
ylab("Baseline") +
ggtitle("Sex vs. Baseline") +
theme_bw()
ggplot(data = participants_df, aes(x=age, y=baseline, col = sex)) +
geom_point() +
xlab("Age") +
ylab("Baseline") +
ggtitle("Sex vs. Baseline") +
theme_bw()
ggplot(data = participants_df, aes(x=age, y=baseline, col = BMI)) +
geom_point() +
xlab("Age") +
ylab("Baseline") +
ggtitle("Sex vs. Baseline") +
theme_bw()
ggplot(data = participants_df, aes(x=age, y=baseline, col = BMI)) +
geom_point() +
xlab("Age") +
ylab("Baseline") +
ggtitle("BMI vs. Baseline") +
theme_bw()
ggplot(data = participants_df, aes(x=BMI, y=baseline, col = age)) +
geom_point() +
xlab("BMI") +
ylab("Baseline") +
ggtitle("Age vs. Baseline") +
theme_bw()
colnames(participants_baseline_imp)
colnames(df)
# Sex, Age, Baseline, BMI, Arm
ggplot(data = df, aes(x=age, y=baseline, col = sex)) +
geom_point() +
xlab("age") +
ylab("Baseline") +
ggtitle("Sex vs. Baseline") +
theme_bw()
ggplot(data = df, aes(x=baseline, y=age, col = sex)) +
geom_point() +
xlab("baseline") +
ylab("age") +
ggtitle("Age vs. Baseline") +
theme_bw()
ggplot(data = df, aes(x=BMI, y=baseline, col = age)) +
geom_point() +
xlab("BMI") +
ylab("Baseline") +
ggtitle("Age vs. Baseline") +
theme_bw()
ggplot(data = df, aes(x=BMI, y=age, col = sex)) +
geom_point() +
xlab("BMI") +
ylab("Age") +
ggtitle("Sex vs. Age") +
theme_bw()
ggplot(data = df, aes(x=age, y=baseline, col = BMI)) +
geom_point() +
xlab("Age") +
ylab("Baseline") +
ggtitle("BMI vs. Baseline") +
theme_bw()
ggplot(data = df, aes(x=BMI, y=baseline, col = age)) +
geom_point() +
xlab("BMI") +
ylab("Baseline") +
ggtitle("Age vs. Baseline") +
theme_bw()
ggplot(data = df, aes(x=BMI, y=age, col = sex)) +
geom_point() +
xlab("BMI") +
ylab("Age") +
ggtitle("Sex vs. Age") +
theme_bw()
# Sex, Age, Baseline, BMI, Arm
ggplot(data = df, aes(x=age, y=baseline, col = sex)) +
geom_point() +
xlab("age") +
ylab("Baseline") +
ggtitle("Sex vs. Baseline") +
theme_bw()
ggplot(data = df, aes(x=age, y=baseline, col = arm)) +
geom_point() +
xlab("Arm") +
ylab("Baseline") +
ggtitle("Arm vs. Baseline") +
theme_bw()
ggplot(data = df, aes(x=age, y=BMI, col = arm)) +
geom_point() +
xlab("Arm") +
ylab("BMI") +
ggtitle("Arm vs. BMI") +
theme_bw()
ggplot(data = df, aes(x=age, y=age, col = arm)) +
geom_point() +
xlab("Arm") +
ylab("Age") +
ggtitle("Arm vs. Age") +
theme_bw()
ggplot(data = df, aes(x=age, y=baseline, col = arm)) +
geom_point() +
xlab("Arm") +
ylab("Age") +
ggtitle("Arm vs. Age") +
theme_bw()
ggplot(data = df, aes(x=age, y=baseline, col = arm)) +
geom_point() +
xlab("Age") +
ylab("Baseline") +
ggtitle("Arm vs. Age") +
theme_bw()
# Fit ANCOVA model with interactions
final_model <- lm(outcome ~ sex + age + baseline + BMI + arm, data = trial_results)
# Display results
tbl_regression(final_model)
vif(final_model)
# Fit ANCOVA model with interactions
final_model <- lm(outcome ~ sex + age + baseline + BMI + arm + sex:arm + baseline:sex, data = trial_results)
# Display results
tbl_regression(final_model)
vif(final_model)
# Fit ANCOVA model with interactions
final_model <- lm(outcome ~ sex + age + baseline + BMI + arm + baseline:sex, data = trial_results)
# Display results
tbl_regression(final_model)
vif(final_model)
tbl_regression(lm_part_int)
lm_part_int = lm(outcome ~ arm + baseline + baseline:arm, data = trial_results)
lm_multiple = lm(outcome ~ baseline + arm + sex + age + BMI, data = trial_results)
summary(lm_multiple)
tbl_regression(lm_multiple)
vif(lm_multiple)
lm_multiple = lm(outcome ~ baseline + arm + sex + age + BMI + baseline:sex, data = trial_results) # BMI significance
summary(lm_multiple)
tbl_regression(lm_multiple)
vif(lm_multiple)
lm_multiple = lm(outcome ~ baseline + arm + sex + age + BMI + sex:baseline, data = trial_results) # BMI significance
summary(lm_multiple)
tbl_regression(lm_multiple)
vif(lm_multiple)
lm_multiple = lm(outcome ~ baseline + arm + sex + age + BMI, data = trial_results) # BMI significance
vif(lm_multiple)
lm_multiple = lm(outcome ~ baseline + arm + age + BMI + sex:baseline, data = trial_results) # BMI significance
vif(lm_multiple)
ggplot(data = df, aes(x=BMI, y=age, col = sex)) +
geom_point() +
xlab("BMI") +
ylab("Age") +
ggtitle("Sex vs. Age") +
theme_bw()
# Create a contingency table of sex vs. arm
table_sex_arm <- table(df$sex, df$arm)
# Perform the Chi-square test
chisq.test(table_sex_arm)
table_sex_arm
colnames(df)
chisq <- chisq.test(table_sex_arm)
chisq$p.value
ggplot(data = df, aes(x=age, y=baseline, col = BMI)) +
geom_point() +
xlab("BMI") +
ylab("Age") +
ggtitle("Sex vs. Age") +
theme_bw()
ggplot(data = df, aes(x=BMI, y=age, col = sex)) +
geom_point() +
xlab("BMI") +
ylab("Age") +
ggtitle("Sex vs. Age") +
theme_bw()
# Sex, Age, Baseline, BMI, Arm
ggplot(data = df, aes(x=age, y=baseline, col = sex)) +
geom_point() +
xlab("age") +
ylab("Baseline") +
ggtitle("Sex vs. Baseline") +
theme_bw()
ggplot(data = df, aes(x=BMI, y=baseline, col = age)) +
geom_point() +
xlab("BMI") +
ylab("Baseline") +
ggtitle("Age vs. Baseline") +
theme_bw()
ggplot(data = df, aes(x=age, y=baseline, col = BMI)) +
geom_point() +
xlab("Age") +
ylab("Baseline") +
ggtitle("BMI vs. Baseline") +
theme_bw()
ggplot(data = df, aes(x=BMI, y=age, col = sex)) +
geom_point() +
xlab("BMI") +
ylab("Age") +
ggtitle("Sex vs. Age") +
theme_bw()
ggplot(data = df, aes(x=age, y=baseline, col = arm)) +
geom_point() +
xlab("Arm") +
ylab("Baseline") +
ggtitle("Arm vs. Baseline") +
theme_bw()
ggplot(data = df, aes(x=age, y=BMI, col = arm)) +
geom_point() +
xlab("Age") +
ylab("BMI") +
ggtitle("Arm vs. BMI") +
theme_bw()
ggplot(data = df, aes(x=age, y=baseline, col = arm)) +
geom_point() +
xlab("Age") +
ylab("Baseline") +
ggtitle("Arm vs. Baseline") +
theme_bw()
ggplot(data = df, aes(x=age, y=BMI, col = sex)) +
geom_point() +
xlab("age") +
ylab("BMI") +
ggtitle("Age vs. BMI") +
theme_bw()
ggplot(data = df, aes(x=age, y=BMI, col = sex)) +
geom_point() +
xlab("age") +
ylab("BMI") +
ggtitle("Sex vs. BMI") +
theme_bw()
ggplot(data = df, aes(x=arm, y=baseline, col = BMI)) +
geom_point() +
xlab("Arm") +
ylab("Baseline") +
ggtitle("BMI vs. Baseline") +
theme_bw()
ggplot(data = df, aes(x=age, y=baseline, col = BMI)) +
geom_point() +
xlab("Age") +
ylab("Baseline") +
ggtitle("Age vs. BMI") +
theme_bw()
lm_multiple = lm(outcome ~ baseline + arm + sex + age + BMI + sex:baseline, data = trial_results) # BMI significance
summary(lm_multiple)
vif(lm_multiple)
lm_multiple = lm(outcome ~ baseline + arm + age + BMI + sex:baseline, data = trial_results) # BMI significance
vif(lm_multiple)
summary(lm_multiple)
lm_multiple = lm(outcome ~ baseline + arm + age + BMI + sex:baseline, data = trial_results) # BMI significance
vif(lm_multiple)
summary(lm_multiple)
tbl_regression(lm_multiple)
lm_multiple = lm(outcome ~ baseline + arm + sex + age + BMI, data = trial_results) # BMI significance
tbl_regression(lm_multiple)
lm_multiple = lm(outcome ~ baseline + arm + age + BMI + sex:baseline, data = trial_results) # BMI significance
vif(lm_multiple)
summary(lm_multiple)
tbl_regression(lm_multiple)
lm_multiple = lm(outcome ~ baseline + arm + sex + age + BMI + sex:baseline, data = trial_results) # BMI significance
tbl_regression(lm_multiple)
lm_multiple = lm(outcome ~ baseline + arm + sex + age + BMI + sex:baseline + sex:age, data = trial_results) # BMI significance
tbl_regression(lm_multiple)
lm_multiple = lm(outcome ~ baseline + arm + sex + age + BMI + sex:baseline, data = trial_results) # BMI significance
lm_multiple = lm(outcome ~ baseline + arm + age + BMI + sex:baseline, data = trial_results) # BMI significance
summary(lm_multiple)
resid_capt = resid(lm_multiple)
resid_capt = resid(lm_multiple)
trial_results$resid= resid_capt
ggplot(data = trial_results, aes(x=baseline, y=resid, col=arm)) +
geom_point() +
geom_hline(yintercept=0)+
xlab("Baseline")+
ylab("Residual")+theme_bw()
estimate <- 0.52781  # Coefficient estimate
standard_error <- 0.81179  # Standard error
df <- 435  # Degrees of freedom
# Compute the critical t-value for 95% confidence interval (two-tailed)
t_critical <- qt(0.975, df)
# Compute the margin of error
margin_of_error <- t_critical * standard_error
# Compute the confidence interval
ci_lower <- estimate - margin_of_error
ci_upper <- estimate + margin_of_error
# Print the confidence interval
cat("95% Confidence Interval: (", round(ci_lower, 3), ",", round(ci_upper, 3), ")\n")
